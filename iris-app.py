import streamlit as st
import pandas as pd
from sklearn import datasets
from sklearn.ensemble import RandomForestClassifier
import time

st.set_page_config(page_title='ØªØ´Ø®ÛŒØµ Ú¯ÛŒØ§Ù‡ - RoboAi', layout='centered', page_icon='ðŸŒº')

def show_page():
    st.write("<h3 style='text-align: center; color: gold;'>Ø³Ø§Ù…Ø§Ù†Ù‡ ØªØ´Ø®ÛŒØµ Ù†ÙˆØ¹ Ú¯Ù„ Ø¨Ø§ Ù‡ÙˆØ´ Ù…ØµÙ†ÙˆØ¹ÛŒ ðŸŒº</h3>", unsafe_allow_html=True)
    st.write("<h6 style='text-align: center; color: white;'>RoboAi Ø·Ø±Ø§Ø­ÛŒ Ø´Ø¯Ù‡ ØªÙˆØ³Ø·</h6>", unsafe_allow_html=True)
    st.link_button("Robo-Ai.ir Ø¨Ø§Ø²Ú¯Ø´Øª Ø¨Ù‡", "https://robo-ai.ir")
    with st.sidebar:
        col1, col2, col3 = st.columns(3)
        st.write("<h4 style='text-align: center; color: white;'>ØªØ´Ø®ÛŒØµ Ù†ÙˆØ¹ Ú¯Ù„</h4>", unsafe_allow_html=True)
        st.write("<h4 style='text-align: center; color: white;'>Ø¨Ø§ ØªØ­Ù„ÛŒÙ„ Ø§Ø¨Ø¹Ø§Ø¯ Ú¯Ù„</h4>", unsafe_allow_html=True)
        st.divider()
        st.write("<h5 style='text-align: center; color: white;'>Ø·Ø±Ø§Ø­ÛŒ Ùˆ ØªÙˆØ³Ø¹Ù‡</h5>", unsafe_allow_html=True)
        st.write("<h5 style='text-align: center; color: white;'>Ø­Ù…ÛŒØ¯Ø±Ø¶Ø§ Ø¨Ù‡Ø±Ø§Ù…ÛŒ</h5>", unsafe_allow_html=True)

    def user_input_features():
        sepal_length = st.slider('Ø·ÙˆÙ„ Ú©Ø§Ø³Ø¨Ø±Ú¯', 4.3, 7.9, 5.4)
        sepal_width = st.slider('Ø¹Ø±Ø¶ Ú©Ø§Ø³Ø¨Ø±Ú¯', 2.0, 4.4, 3.4)
        petal_length = st.slider('Ø·ÙˆÙ„ Ú¯Ù„Ø¨Ø±Ú¯', 1.0, 6.9, 1.3)
        petal_width = st.slider('Ø¹Ø±Ø¶ Ú¯Ù„Ø¨Ø±Ú¯', 0.1, 2.5, 0.2)
        data = {'sepal_length': sepal_length,
            'sepal_width': sepal_width,
            'petal_length': petal_length,
            'petal_width': petal_width}
        features = pd.DataFrame(data, index = [0])
        return features

    df = user_input_features()

    def stream_data():
        for word in text3.split(" "):
            yield word + " "
            time.sleep(0.05)

    iris = datasets.load_iris()
    x = iris.data
    y = iris.target

    model = RandomForestClassifier()
    model.fit(x, y)

    ibutton = st.button('Ø´Ù†Ø§Ø³Ø§ÛŒÛŒ')
    if ibutton:
        with st.chat_message("assistant"):
            with st.spinner('''Ø¯Ø±Ø­Ø§Ù„ Ø´Ù†Ø§Ø³Ø§ÛŒÛŒ'''):
                time.sleep(2)
                st.success(u'\u2713''Ø´Ù†Ø§Ø³Ø§ÛŒÛŒ Ø§Ù†Ø¬Ø§Ù… Ø´Ø¯')
        prediction = model.predict(df)
        prediction_proba = model.predict_proba(df)
        if prediction == 0:
            text1 = 'Ø¨Ø± Ø§Ø³Ø§Ø³ ØªØ­Ù„ÛŒÙ„ Ù…Ù† Ù†ÙˆØ¹ Ú¯Ù„ Ø²Ù†Ø¨Ù‚ ÙˆØ§Ø±Ø¯ Ø´Ø¯Ù‡ ØŒ Ø³ØªÙˆØ³Ø§ Ø§Ø³Øª'
            text2 = 'Based on my analysis, this dimension belong to Setosa'
            def stream_data1():
                for word in text1.split(" "):
                    yield word + " "
                    time.sleep(0.09)
            st.write_stream(stream_data1)
            def stream_data2():
                for word in text2.split(" "):
                    yield word + " "
                    time.sleep(0.09)
            st.write_stream(stream_data2)
            st.image('setosa.jpg')

        elif prediction == 1:
            text1 = 'Ø¨Ø± Ø§Ø³Ø§Ø³ ØªØ­Ù„ÛŒÙ„ Ù…Ù† Ù†ÙˆØ¹ Ú¯Ù„ Ø²Ù†Ø¨Ù‚ ÙˆØ§Ø±Ø¯ Ø´Ø¯Ù‡ ØŒ Ú¯Ù„ ÙˆØ±Ø³ÛŒÚ©Ø§Ù„Ø± Ø§Ø³Øª'
            text2 = 'Based on my analysis, this dimension belong to Versicolor'
            def stream_data1():
                for word in text1.split(" "):
                    yield word + " "
                    time.sleep(0.09)
            st.write_stream(stream_data1)
            def stream_data2():
                for word in text2.split(" "):
                    yield word + " "
                    time.sleep(0.09)
            st.write_stream(stream_data2)
            st.image('versicolor.jpeg')

        else:
            text1 = 'Ø¨Ø± Ø§Ø³Ø§Ø³ ØªØ­Ù„ÛŒÙ„ Ù…Ù† Ù†ÙˆØ¹ Ú¯Ù„ Ø²Ù†Ø¨Ù‚ ÙˆØ§Ø±Ø¯ Ø´Ø¯Ù‡ ØŒ Ú¯Ù„ ÙˆÛŒØ±Ø¬ÛŒÙ†ÛŒÚ©Ø§ Ø§Ø³Øª'  
            text2 = 'Based on my analysis, this dimension belong to Virginica'
            def stream_data1():
                for word in text1.split(" "):
                    yield word + " "
                    time.sleep(0.09)
            st.write_stream(stream_data1)
            def stream_data2():
                for word in text2.split(" "):
                    yield word + " "
                    time.sleep(0.09)
            st.write_stream(stream_data2)
            st.image('virginica.jpg')
            
show_page()
